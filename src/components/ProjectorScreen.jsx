/* eslint-disable react/prop-types */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: RackRibs (https://sketchfab.com/RackRibs)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/projector-screens-77b3edbe67e5411fa21f07b16196098b
Title: Projector Screens
*/
import { useGSAP } from "@gsap/react";
import { useGLTF, useTexture } from "@react-three/drei";
import gsap from "gsap";
import { useRef } from "react";

const ProjectorScreen = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF("/models/projector_screens.glb");

  const txt = useTexture(
    props.texture ? props.texture : "/textures/project/project-1.png",
  );

  // const txt = useTexture("/textures/vscode.png");

  useGSAP(() => {
    gsap.from(group.current.rotation, {
      y: Math.PI / 2,
      duration: 1,
      ease: "power3.out",
    });
  }, [txt]);

  return (
    <group {...props} dispose={null} ref={group}>
      <group scale={0.01}>
        <group
          position={[4.819, 111.772, 0]}
          rotation={[-Math.PI / 2, Math.PI / 2, 0]}
          scale={[50.619, 83.127, 86.454]}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane005_projector_screen_0.geometry}
            material={materials.projector_screen}
          >
            <meshBasicMaterial map={txt} />
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane005_projector_segment_0.geometry}
            material={materials.projector_segment}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Plane005_projector_metal_0.geometry}
            material={materials.projector_metal}
          />
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/models/projector_screens.glb");

export default ProjectorScreen;
